name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Build the package and set the artifact
        run: |
          python -m build --wheel
          echo "package=$(ls dist/*.whl)" >> $GITHUB_OUTPUT
      - name: Upload the artifact
        uses: actions/upload-artifact@v3
        with:
          name: package
          path: dist

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download the artifact
        uses: actions/download-artifact@v3
        with:
          name: package
          path: dist
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: $EC2_HOST
          username: ${{ vars.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            # Install necessary tools and dependencies
            sudo apt-get update
            sudo apt-get install -y python3-pip
            sudo pip3 install --upgrade pip
            sudo pip3 install flask

            # Navigate to the application directory
            cd /home/${{ vars.EC2_USERNAME }}/app

            # Remove old package files
            rm -rf dist
            mkdir dist

            # Transfer new package
            scp -i ${{ secrets.EC2_KEY }} dist/*.whl ${{ vars.EC2_USERNAME }}@${{ vars.EC2_HOST }}:/home/${{ vars.EC2_USERNAME }}/app/dist/

            # Install the new package
            pip3 install dist/*.whl

            # Run the Flask app
            FLASK_APP=app.py flask run --host=0.0.0.0 --port=5000
