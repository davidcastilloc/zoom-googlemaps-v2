name: CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with unittest
        run: |
          python -m unittest discover -s tests
      - name: Build package
        run: |
          python -m build
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist
      - name: save the pem file
        run: |
          echo "${{ secrets.EC2_KEY }}" > deploy.pem
      - name: Deploy Files on EC2
        uses: saranraj3195/sparkout-deployment@v2
        with:
          # SSH private key for authentication
          DEPLOY_KEY: deploy.pem
          # SSH username
          USERNAME:  ${{ vars.EC2_USERNAME }}
          # IP address of the server
          SERVER_IP: ${{ vars.EC2_HOST }}
          # SSH port of the server
          SERVER_PORT: 22
          # Destination directory on the server
          SERVER_DESTINATION: /home/${{ vars.EC2_USERNAME }}
          # Folder to deploy
          FOLDER: ${{github.event.repository.name}}
      - name: Run Script for Start Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.EC2_HOST }}
          username: ${{ vars.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            pip3 install -r /home/${{ vars.EC2_USERNAME }}/${{github.event.repository.name}}/requirements.txt
            # Run the Flask app
            FLASK_APP=/home/${{ vars.EC2_USERNAME }}/${{github.event.repository.name}}/app.py flask run --host=0.0.0.0 --port=5000
            # Remove the old package
