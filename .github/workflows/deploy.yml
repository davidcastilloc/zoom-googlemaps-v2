name: CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with unittest
        run: |
          python -m unittest discover -s tests
      - name: Build package
        run: |
          python -m build
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist
      - name: Deploy to web server
        uses: moonpathbg/scp_uploader@latest
        with:
            host: ${{ vars.EC2_HOST }}
            port: 22
            username: ${{ vars.EC2_USERNAME }}
            key : ${{ secrets.EC2_KEY }}
            source: "./"
            target: "~/"
      - name: Run Script for Start Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.EC2_HOST }}
          username: ${{ vars.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            pip uninstall -y PolygonsAPI
            pip install dist/*.whl
            # start detached process to run server
            nohup polygons &
            # wait for server to start
            sleep 10
            # check if server is running
            if ! pgrep -f "polygons" > /dev/null; then
              echo "Server is not running"
              exit 1
            fi
            echo "Server is running"
            # check if server is up