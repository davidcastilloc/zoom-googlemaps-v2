name: CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: test with unittest
        run: |
            python -m unittest discover -s tests
      - name: upload sources to artifact
        uses: actions/upload-artifact@v3
        with:
          name: .
          path: ${{ github.action_path }}
  deploy:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Download all sources from artifact
        uses: actions/download-artifact@v3
        with:
          name: .
          path: ${{ github.action_path }}
      - name: Copy all sources to server
        uses: moonpathbg/scp_uploader@latest
        with:
            host: ${{ vars.EC2_HOST }}
            port: 22
            username: ${{ vars.EC2_USERNAME }}
            key : ${{ secrets.EC2_KEY }}
            source: .
            target: "~/production"
      - name: Restart Services for Start Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.EC2_HOST }}
          username: ${{ vars.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            sudo systemctl restart polygons
      - name: test server heartbeat
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.EC2_HOST }}
          username: ${{ vars.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            curl -s http://localhost:5000/heartbeat | grep "OK"
