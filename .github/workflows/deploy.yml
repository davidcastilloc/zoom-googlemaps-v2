# This is a basic workflow to help you get started with Actions
# This workflow will install Python dependencies, build the Python package, and upload to EC2 instance
# in EC2 instance run the flask app
name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Build the package and set the artifact
      run: |
        python -m build --wheel
        echo "package=$(ls dist/*.whl)" >> $GITHUB_OUTPUT
    - name: Upload the artifact
      uses: actions/upload-artifact@v3
      with:
        name: package
        path: ${{ steps.build.outputs.package }}
    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: $EC2_HOST
        username: $EC2_USERNAME
        key: ${{ secrets.EC2_KEY }}
        script: |
          sudo pip install -U pip
          sudo pip install -U setuptools
          sudo pip install -U wheel
          sudo pip install -U twine
          sudo pip install -U flask
          sudo pip install -U flask-cors
          sudo pip install -U shapely
          sudo pip install -U pykml
          sudo pip install -U rtree
          sudo pip install -U lxml
          sudo pip install -U click
          sudo pip install -U colorama
          sudo pip install -U blinker
          sudo pip install -U autopep8
          sudo pip install -U flask
          sudo pip install -U flask-cors
          cd /home/$EC2_USERNAME/${{ github.event.repository.name }}
          rm -rf dist
          rm -rf build
          rm -rf *.egg-info
          twine upload dist/* --skip-existing --verbose --non-interactive
          echo "Deployed to EC2"
